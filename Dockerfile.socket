#부모 이미지 지정
FROM node:alpine
# app 디렉토리 생성

# ARG로 변수 선언
ARG DATABASE_URL
ARG DATABASE_HOST
ARG DATABASE_PORT
ARG DATABASE_NAME
ARG DATABASE_USERNAME
ARG DATABASE_PASSWORD
ARG PORT
ARG USER
ARG PASS
ARG JWT_SECRET
ARG GOOGLE_SECRET
ARG GOOGLE_ID
ARG NAVER_ID
ARG NAVER_SECRET
ARG KAKAO_ID
ARG BACKEND_URL
ARG FRONTEND_URL
ARG REDIS_HOST
ARG REDIS_PORT
ARG REDIS_PASSWORD
ARG SOCKET_SERVER_URL
ARG KAFKA_IP1
ARG KAFKA_IP2
ARG KAFKA_IP3
ARG MATCHING_REDIS_HOST
ARG MATCHING_REDIS_PORT
ARG DATABASE_REPLICA_URL

# ENV로 환경 변수 설정
ENV DATABASE_URL=$DATABASE_URL \
DATABASE_HOST=$DATABASE_HOST \
DATABASE_PORT=$DATABASE_PORT \
DATABASE_NAME=$DATABASE_NAME \
DATABASE_USERNAME=$DATABASE_USERNAME \
DATABASE_PASSWORD=$DATABASE_PASSWORD \
PORT=$PORT \
USER=$USER \
PASS=$PASS \
JWT_SECRET=$JWT_SECRET \
GOOGLE_SECRET=$GOOGLE_SECRET \
GOOGLE_ID=$GOOGLE_ID \
NAVER_ID=$NAVER_ID \
NAVER_SECRET=$NAVER_SECRET \
KAKAO_ID=$KAKAO_ID \
BACKEND_URL=$BACKEND_URL \
FRONTEND_URL=$FRONTEND_URL \
REDIS_HOST=$REDIS_HOST \
REDIS_PORT=$REDIS_PORT \
REDIS_PASSWORD=$REDIS_PASSWORD \
SOCKET_SERVER_URL=$SOCKET_SERVER_URL \
KAFKA_IP1=$KAFKA_IP1 \
KAFKA_IP2=$KAFKA_IP2 \
KAFKA_IP3=$KAFKA_IP3 \
MATCHING_REDIS_HOST=$MATCHING_REDIS_HOST \
MATCHING_REDIS_PORT=$MATCHING_REDIS_PORT \
DATABASE_REPLICA_URL=$DATABASE_REPLICA_URL


LABEL creator="no7@stocking"
LABEL version="3.0.0"



#Docker 이미지 내부에서 RUN, CMD, ENTRYPOINT의 명령이 실행될 디렉터리를 설정합니다.


WORKDIR /app

# 외부 패키지 설치를 위해 package.json과 yarn.lock 파일 복사
COPY ./docker-compose.yml .
COPY socket/package.json .
COPY socket/yarn.lock .

# 패키지 설치
RUN  yarn install

# 메인 폴더의 내용을 전부 복사 
COPY socket .
# 현재 디렉터리에 있는 파일들을 이미지 내부 /app 디렉터리에 추가함

ADD     . /app
#로컬 빌드이기때문에 안의 .env파일이 있어 arg와 env로 사용할 필요 없음
# ARG로 빌드 시점 변수를 선언
ARG DATABASE_URL
ARG PORT
ARG DATABASE_HOST
ARG DATABASE_PORT
ARG DATABASE_NAME
ARG DATABASE_USERNAME
ARG DATABASE_PASSWORD
ARG JWT_SECRET
ARG PASS
ARG USER
ARG GOOGLE_ID
ARG GOOGLE_SECRET
ARG NAVER_ID
ARG BACKEND_URL
ARG FRONTEND_URL
ARG NAVER_SECRET
ARG KAKAO_ID
ARG REDIS_HOST
ARG REDIS_PORT
ARG REDIS_PASSWORD
ARG SOCKET_SERVER_URL
ARG KAFKA_IP1
ARG KAFKA_IP2
ARG KAFKA_IP3
ARG MATCHING_REDIS_HOST
ARG MATCHING_REDIS_PORT

ENV DATABASE_URL=$DATABASE_URL 
ENV PORT=$PORT 
ENV DATABASE_HOST=$DATABASE_HOST 
ENV DATABASE_PORT=$DATABASE_PORT 
ENV DATABASE_NAME=$DATABASE_NAME 
ENV DATABASE_USERNAME=$DATABASE_USERNAME 
ENV DATABASE_PASSWORD=$DATABASE_PASSWORD 
ENV PASS=$PASS 
ENV USER=$USER 
ENV NAVER_ID=$NAVER_ID
ENV BACKEND_URL=$BACKEND_URL
ENV FRONTEND_URL=$FRONTEND_URL
ENV NAVER_SECRET=$NAVER_SECRET
ENV KAKAO_ID=$KAKAO_ID
ENV GOOGLE_ID=$GOOGLE_ID 
ENV GOOGLE_SECRET=$GOOGLE_SECRET 
ENV JWT_SECRET=$JWT_SECRET
ENV REDIS_HOST=$REDIS_HOST
ENV REDIS_PORT=$REDIS_PORT
ENV REDIS_PASSWORD=$REDIS_PASSWORD
ENV SOCKET_SERVER_URL=$SOCKET_SERVER_URL
ENV KAFKA_IP1=$KAFKA_IP1
ENV KAFKA_IP2=$KAFKA_IP2
ENV KAFKA_IP3=$KAFKA_IP3
ENV MATCHING_REDIS_HOST=$MATCHING_REDIS_HOST
ENV MATCHING_REDIS_PORT=$MATCHING_REDIS_PORT
RUN yarn prisma generate

CMD [ "node","src/app.js" ]