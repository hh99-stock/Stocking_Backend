# 부모 이미지 지정
FROM node:alpine
# app 디렉토리 생성

# ARG로 변수 선언
ARG DATABASE_URL
ARG DATABASE_HOST
ARG DATABASE_PORT
ARG DATABASE_NAME
ARG DATABASE_USERNAME
ARG DATABASE_PASSWORD
ARG PORT
ARG appKey
ARG secreKey
ARG SLACK_WEBHOOK_URL
ARG USER
ARG PASS
ARG JWT_SECRET
ARG GOOGLE_SECRET
ARG GOOGLE_ID
ARG NAVER_ID
ARG NAVER_SECRET
ARG KAKAO_ID
ARG BACKEND_URL
ARG FRONTEND_URL

# ENV로 환경 변수 설정
ENV DATABASE_URL=$DATABASE_URL \
DATABASE_HOST=$DATABASE_HOST \
DATABASE_PORT=$DATABASE_PORT \
DATABASE_NAME=$DATABASE_NAME \
DATABASE_USERNAME=$DATABASE_USERNAME \
DATABASE_PASSWORD=$DATABASE_PASSWORD \
PORT=$PORT \
appKey=$appKey \
secretKey=$secretKey \
SLACK_WEBHOOK_URL=$SLACK_WEBHOOK_URL \
USER=$USER \
PASS=$PASS \
JWT_SECRET=$JWT_SECRET \
GOOGLE_SECRET=$GOOGLE_SECRET \
GOOGLE_ID=$GOOGLE_ID \
NAVER_ID=$NAVER_ID \
NAVER_SECRET=$NAVER_SECRET \
KAKAO_ID=$KAKAO_ID \
BACKEND_URL=$BACKEND_URL \
FRONTEND_URL=$FRONTEND_URL \
REDIS_HOST=$REDIS_HOST \
REDIS_PORT=$REDIS_PORT \
REDIS_PASSWORD=$REDIS_PASSWORD 



LABEL creator="no6@trello"
LABEL version="1.0.0"



#Docker 이미지 내부에서 RUN, CMD, ENTRYPOINT의 명령이 실행될 디렉터리를 설정합니다.

WORKDIR /app

# 외부 패키지 설치를 위해 package.json과 yarn.lock 파일 복사
COPY main/package.json .
COPY main/yarn.lock .

# 패키지 설치
RUN  yarn install

# 나머지 모두 복사
COPY main/ .
# 현재 디렉터리에 있는 파일들을 이미지 내부 /app 디렉터리에 추가함

ADD     main/ /app
RUN yarn prisma generate
# 하기 포트를 외부로 노출합니다.


CMD [ "yarn","dev" ]